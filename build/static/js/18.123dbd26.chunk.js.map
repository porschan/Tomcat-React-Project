{"version":3,"sources":["routes/deviceReporting/components/index.js"],"names":["prop","state","record","showModal","key","e","preventDefault","setState","onClose","onWrapTouchStart","test","navigator","userAgent","el","selector","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","call","parentElement","closest","target","modal1","modal2","mode","icon","type","onLeftClick","console","info","history","back","rightContent","style","marginRight","onClick","this","popup","visible","animationType","afterClose","renderHeader","className","clear","placeholder","Item","Component"],"mappings":"ueAuBI,WAAYA,GAAO,IAAD,8BACd,4CAAMA,KALVC,MAAQ,CACJC,OAAQ,MAGM,EAmBlBC,UAAY,SAAAC,GAAG,OAAI,SAACC,GAChBA,EAAEC,iBACF,EAAKC,SAAL,eACKH,GAAM,MAtBG,EAyBlBI,QAAU,SAAAJ,GAAG,OAAI,WACb,EAAKG,SAAL,eACKH,GAAM,MA3BG,EA+BlBK,iBAAmB,SAACJ,GAEX,oBAAoBK,KAAKC,UAAUC,aAnDhD,SAAiBC,EAAIC,GAEjB,IADA,IAAMC,EAAkBF,EAAGG,SAAWH,EAAGI,uBAAyBJ,EAAGK,oBAAsBL,EAAGM,kBACvFN,GAAI,CACP,GAAIE,EAAgBK,KAAKP,EAAIC,GACzB,OAAOD,EAEXA,EAAKA,EAAGQ,cAEZ,OAAO,KA8CWC,CAAQjB,EAAEkB,OAAQ,sBAE5BlB,EAAEC,mBAzBN,EAAKL,MAAQ,CACTuB,QAAQ,EACRC,QAAQ,GAfE,E,sEA4Cd,OAEI,6BAEI,uBACIC,KAAK,QACLC,KAAM,uBAAMC,KAAK,SACjBC,YAAa,WACTC,QAAQC,KAAK,eACbC,QAAQC,QAEZC,aAAc,CACV,uBAAM9B,IAAI,IAAIwB,KAAK,SAASO,MAAO,CAAEC,YAAa,QAAUC,QAASC,KAAKnC,UAAU,cAR5F,4BAYA,sEAGA,2BAGI,4BACA,uBACIoC,OAAK,EACLC,QAASF,KAAKrC,MAAMwB,OACpBjB,QAAS8B,KAAK9B,QAAQ,UACtBiC,cAAc,WACdC,WAAY,WAAQZ,QAAQC,KAAK,gBAEjC,uBAAMY,aAAc,kBAAM,0DAAiBC,UAAU,cAOjD,uBAAWC,OAAK,EAACC,YAAY,gCAA7B,KACA,uBAAWD,OAAK,EAACC,YAAY,gCAA7B,KACA,uBAAWD,OAAK,EAACC,YAAY,gCAA7B,KACA,uBAAWD,OAAK,EAACC,YAAY,gCAA7B,KACA,sBAAMC,KAAN,KACI,uBAAQnB,KAAK,UAAUS,QAASC,KAAK9B,QAAQ,WAA7C,yB,GA5FHwC","file":"static/js/18.123dbd26.chunk.js","sourcesContent":["/* eslint no-dupe-keys: 0, no-mixed-operators: 0 */\nimport React, {Component} from 'react';\nimport {Icon, NavBar,Modal, List, Button, WhiteSpace, WingBlank, InputItem} from 'antd-mobile';\nimport './index.css';\n\nfunction closest(el, selector) {\n    const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\n    while (el) {\n        if (matchesSelector.call(el, selector)) {\n            return el;\n        }\n        el = el.parentElement;\n    }\n    return null;\n}\n\n\nexport default class extends Component {\n\n    state = {\n        record: null,\n    };\n\n    constructor(prop) {\n        super(prop);\n        // let temp = getInitData();\n        // temp.then((resData) => {\n        //   const {status, data} = resData;\n        //   if (parseInt(status) === 0) {\n        //     console.log(data);\n        //   }\n        // }).catch((errData) => {\n        //   console.log(errData);\n        // });\n\n\n        this.state = {\n            modal1: false,\n            modal2: false,\n        };\n    };\n\n    showModal = key => (e) => {\n        e.preventDefault(); // 修复 Android 上点击穿透\n        this.setState({\n            [key]: true,\n        });\n    }\n    onClose = key => () => {\n        this.setState({\n            [key]: false,\n        });\n    }\n\n    onWrapTouchStart = (e) => {\n        // fix touch to scroll background page on iOS\n        if (!/iPhone|iPod|iPad/i.test(navigator.userAgent)) {\n            return;\n        }\n        const pNode = closest(e.target, '.am-modal-content');\n        if (!pNode) {\n            e.preventDefault();\n        }\n    }\n\n    render() {\n\n        return (\n\n            <div>\n\n                <NavBar\n                    mode=\"light\"\n                    icon={<Icon type=\"left\" />}\n                    onLeftClick={() => {\n                        console.info('onLeftClick')\n                        history.back();\n                    }}\n                    rightContent={[\n                        <Icon key=\"0\" type=\"search\" style={{ marginRight: '16px' }} onClick={this.showModal('modal2')}/>,\n                    ]}\n                >我要报障</NavBar>\n\n                <h1>测试modal - 弹出框</h1>\n\n\n                <WingBlank>\n\n                    {/*<Button onClick={this.showModal('modal2')}>popup</Button>*/}\n                    <WhiteSpace />\n                    <Modal\n                        popup\n                        visible={this.state.modal2}\n                        onClose={this.onClose('modal2')}\n                        animationType=\"slide-up\"\n                        afterClose={() => { console.info('afterClose'); }}\n                    >\n                        <List renderHeader={() => <div>委托买入</div>} className=\"popup-list\">\n                            {/*{['股票名称', '股票代码', '买入价格'].map((i, index) => (*/}\n                            {/*    <List.Item key={index}>*/}\n                            {/*        <InputItem clear placeholder=\"displayed clear while typing\" >{i}</InputItem>*/}\n                            {/*    </List.Item>*/}\n                            {/*))}*/}\n\n                            <InputItem clear placeholder=\"displayed clear while typing\" >A</InputItem>\n                            <InputItem clear placeholder=\"displayed clear while typing\" >B</InputItem>\n                            <InputItem clear placeholder=\"displayed clear while typing\" >C</InputItem>\n                            <InputItem clear placeholder=\"displayed clear while typing\" >D</InputItem>\n                            <List.Item>\n                                <Button type=\"primary\" onClick={this.onClose('modal2')}>买入</Button>\n                            </List.Item>\n                        </List>\n                    </Modal>\n                </WingBlank>\n\n            </div>\n\n\n\n        );\n    }\n}\n"],"sourceRoot":""}