{"version":3,"sources":["index.js","models/global.js","utils/core.js","routes/Dashboard/index.js","routes/HandleVideoTask/index.js","routes/VideoTaskList/index.js","routes/HangupFrom/index.js","routes/DelayFrom/index.js","routes/SurveyFrom/index.js","routes/ReportingFrom/index.js","routes/ReportingList/index.js","routes/ReportingLikeList/index.js","routes/taskDetail/index.js","routes/deviceReporting/index.js","routes/taskList/index.js","router.js","config.js"],"names":["app","dva","history","createHashHistory","use","$$","requestHeaders","request","config","model","require","default","router","start","namespace","state","subscriptions","setup","dispatch","effects","fetch","payload","call","put","type","reducers","save","action","dynamicWrapper","models","component","dynamic","window","dva_router_pathMap","createRoute","routesConfig","Comp","path","indexRoute","title","otherProps","routeProps","assign","key","randomStr","render","props","htmlTitle","replace","routerData","exact","from","to","console","log","RouterConfig","Dashboard","HandleVideoTask","VideoTaskList","HangupFrom","DelayFrom","SurveyFrom","ReportingFrom","ReportingList","ReportingLikeList","TaskDetail","DeviceReporting","TaskList","serverUrl","contextPath"],"mappings":"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","file":"static/js/main.9e54027c.chunk.js","sourcesContent":["import dva from 'dva';\nimport config from './config';\nimport $$ from 'cmn-utils';\nimport request from 'cmn-utils/lib/request';\nimport './index.css';\nimport createHashHistory from \"history/createHashHistory\";\n\n// 1. Initialize\nconst app = dva({\n  history: createHashHistory(),\n});\n\n// 2. Plugins\napp.use({});\n\n$$.requestHeaders({\n  'Content-Type': 'application/json;charset=UTF-8',\n  'Accept': 'application/json',\n  'X-Requested-With': 'XMLHttpRequest',\n});\n\nrequest.config(config.request);\n\n// 3. Model\napp.model(require('./models/global').default);\n\n// 4. Router\napp.router(require('./router').default);\n\n// 5. Start\napp.start('#root');\n","\nexport default {\n\n  namespace: 'global',\n\n  state: {},\n\n  subscriptions: {\n    setup({ dispatch, history }) {\n    },\n  },\n\n  effects: {\n    *fetch({ payload }, { call, put }) {\n      yield put({ type: 'save' });\n    },\n  },\n\n  reducers: {\n    save(state, action) {\n      return { ...state, ...action.payload };\n    },\n  },\n\n};\n","import React from 'react';\nimport dynamic from 'dva/dynamic';\nimport {Redirect, Route, Switch} from 'dva/router';\nimport DocumentTitle from 'react-document-title';\nimport assign from 'object-assign';\nimport $$ from 'cmn-utils';\nimport config from '@/config';\n\n/**\n * 生成动态组件\n * @param {*} app\n * @param {*} models\n * @param {*} component\n */\nexport const dynamicWrapper = (app, models, component) =>\n  dynamic({\n    app,\n    models: () => models,\n    component\n  });\n\n/**\n * 生成一组路由\n * @param {*} app\n * @param {*} routesConfig\n */\nexport const createRoutes = (app, routesConfig) => {\n  return (\n    <Switch>\n      {routesConfig(app).map(config => createRoute(app, () => config))}\n    </Switch>\n  );\n};\n// 路由映射表\nwindow.dva_router_pathMap = {};\n/**\n * 生成单个路由\n * @param {*} app\n * @param {*} routesConfig\n */\nexport const createRoute = (app, routesConfig) => {\n  const {\n    component: Comp,\n    path,\n    indexRoute,\n    title,\n    ...otherProps\n  } = routesConfig(app);\n\n  if (path && path !== '/') {\n    window.dva_router_pathMap[path] = {path, title, ...otherProps };\n    // 为子路由增加parentPath\n    // if (otherProps.childRoutes && otherProps.childRoutes.length) {\n    //   otherProps.childRoutes.forEach(item => {\n    //     if (window.dva_router_pathMap[item.key]) {\n    //       window.dva_router_pathMap[item.key].parentPath = path;\n    //     }\n    //   });\n    // }\n  }\n  const routeProps = assign(\n    {\n      key: path || $$.randomStr(4),\n      render: props => (\n        <DocumentTitle\n          title={\n            config.htmlTitle ? config.htmlTitle.replace(/{.*}/gi, title) : title\n          }\n        >\n          <Comp routerData={otherProps} {...props} />\n        </DocumentTitle>\n      )\n    },\n    path && {\n      path: path\n    }\n  );\n\n  if (indexRoute) {\n    return [\n      <Redirect key={path + '_redirect'} exact from={path} to={indexRoute} />,\n      <Route {...routeProps} />\n    ];\n  }\n\n  console.log(routeProps);\n  return <Route {...routeProps} />;\n};\n","import {dynamicWrapper, createRoute} from '@/utils/core';\n\nconst routesConfig = (app) => ({\n  path: '/dashboard',\n  title: '应用面板',\n  component: dynamicWrapper(app, [import('./model')], () => import('./components'))\n});\n\nexport default (app) => createRoute(app, routesConfig);\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/handleVideoTask',\r\n    title: '处理工单',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/videoTaskList',\r\n    title: '查询工单',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/hangupFrom',\r\n    title: '申请挂起',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/delayFrom',\r\n    title: '申请延期',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/surveyFrom',\r\n    title: '到场勘查',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/reportingFrom',\r\n    title: '我要报障',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/reportingList',\r\n    title: '我的工单',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\r\n\r\nconst routesConfig = (app) => ({\r\n    path: '/reportingLikeList',\r\n    title: '确认评价',\r\n    component: dynamicWrapper(app, [import('./model')], () => import('./components'))\r\n});\r\n\r\nexport default (app) => createRoute(app, routesConfig);\r\n","import {dynamicWrapper, createRoute} from '@/utils/core';\n\nconst routesConfig = (app) => ({\n  path: '/taskDetail',\n  title: '工单详情',\n  component: dynamicWrapper(app, [import('./model')], () => import('./components'))\n});\n\nexport default (app) => createRoute(app, routesConfig);\n","import {dynamicWrapper, createRoute} from '@/utils/core';\n\nconst routesConfig = (app) => ({\n  path: '/deviceReporting',\n  title: '我要报障',\n  component: dynamicWrapper(app, [import('./model')], () => import('./components'))\n});\n\nexport default (app) => createRoute(app, routesConfig);\n","import {dynamicWrapper, createRoute} from '@/utils/core';\n\nconst routesConfig = (app) => ({\n  path: '/taskList',\n  title: '我的工单',\n  component: dynamicWrapper(app, [import('./model')], () => import('./components'))\n});\n\nexport default (app) => createRoute(app, routesConfig);\n","import React from 'react';\nimport {Redirect, Switch, Router, Route} from 'dva/router';\nimport Dashboard from './routes/Dashboard';\nimport HandleVideoTask from './routes/HandleVideoTask';\nimport VideoTaskList from './routes/VideoTaskList';\nimport HangupFrom from './routes/HangupFrom';\nimport DelayFrom from './routes/DelayFrom';\nimport SurveyFrom from './routes/SurveyFrom';\nimport ReportingFrom from './routes/ReportingFrom';\nimport ReportingList from './routes/ReportingList';\nimport ReportingLikeList from './routes/ReportingLikeList';\n\n\nimport TaskDetail from './routes/taskDetail';\nimport DeviceReporting from './routes/deviceReporting';\nimport TaskList from './routes/taskList';\n\nfunction RouterConfig({history, app}) {\n    return (\n        <Router history={history}>\n            <Switch>\n                {Dashboard(app)}\n                {HandleVideoTask(app)}\n                {VideoTaskList(app)}\n                {HangupFrom(app)}\n                {DelayFrom(app)}\n                {SurveyFrom(app)}\n                {ReportingFrom(app)}\n                {ReportingList(app)}\n                {ReportingLikeList(app)}\n\n                {TaskDetail(app)}\n                {DeviceReporting(app)}\n                {TaskList(app)}\n                <Redirect from=\"/\" to={'/dashboard'}/> {/*打开默认进入应用面板*/}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default RouterConfig;\n","export default {\n  serverUrl: '/VideoResourceServer',\n  contextPath: '/dist',   //配置前端路径的contextPath\n}\n"],"sourceRoot":""}